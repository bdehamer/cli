"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProvenanceHandlerBase = void 0;
const provenance_1 = require("../provenance");
const version_1 = require("../util/version");
const BUILDER_ID_PREFIX = 'https://github.com/npm/slsa-provenance';
/**
 * Base class for any handler which will generate provenance for a subject.
 * Derived classes should implement the enabled() and generatePredicate()
 * methods.
 */
class ProvenanceHandlerBase {
    /**
     * Generate provenance for a subject.
     *
     * @param subject info about the subject of the provenance statement
     * @returns a promise that resolves to the provenance statement
     */
    async generateProvenance(subject) {
        const provenance = {
            _type: provenance_1.IntotoStatementType.v0_1,
            subject: [this.generateSubject(subject)],
            predicateType: provenance_1.SlsaPredicateType.v0_2,
            predicate: await this.generatePredicate(),
        };
        return provenance;
    }
    /**
     * Returns the common builder ID for all handlers deriving from this class.
     *
     * @returns the provenance builder ID
     */
    getBuilderId() {
        return `${BUILDER_ID_PREFIX}@${(0, version_1.getPackageVersion)()}`;
    }
    generateSubject(subject) {
        return {
            name: subject.name,
            digest: { [subject.algorithm]: subject.digest },
        };
    }
}
exports.ProvenanceHandlerBase = ProvenanceHandlerBase;
