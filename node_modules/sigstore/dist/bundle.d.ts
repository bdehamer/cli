import { Entry } from './client';
export declare const ATTESTATION_TYPE_BLOB = "attestation/blob";
export declare const ATTESTATION_TYPE_DSSE = "attestation/dsse";
interface DSSESignature {
    keyid: string;
    sig: string;
}
export interface DSSE {
    payloadType: string;
    payload: string;
    signatures: DSSESignature[];
}
interface AbstractSigstoreBundle {
    attestationType: string;
    attestation: object;
    certificate: string;
    signedEntryTimestamp: string;
    integratedTime: number;
    logIndex: number;
    logID: string;
}
export interface SigstoreBlobBundle extends AbstractSigstoreBundle {
    attestationType: typeof ATTESTATION_TYPE_BLOB;
    attestation: {
        payloadHash: string;
        payloadHashAlgorithm: string;
        signature: string;
    };
}
export interface SigstoreDSSEBundle extends AbstractSigstoreBundle {
    attestationType: typeof ATTESTATION_TYPE_DSSE;
    attestation: DSSE;
}
export declare type SigstoreBundle = SigstoreBlobBundle | SigstoreDSSEBundle;
export declare const buildBlobBundle: (digest: string, signature: string, certificate: string, rekorEntry: Entry) => SigstoreBlobBundle;
export declare const buildDSSEBundle: (envelope: DSSE, certificate: string, rekorEntry: Entry) => SigstoreDSSEBundle;
export {};
//# sourceMappingURL=bundle.d.ts.map