/// <reference types="node" />
/// <reference types="node" />
import { KeyLike } from 'crypto';
import { SigstoreBlobBundle, SigstoreDSSEBundle } from './bundle';
export interface SignOptions {
    fulcioBaseURL?: string;
    rekorBaseURL?: string;
    identityToken?: string;
    oidcIssuer?: string;
    oidcClientID?: string;
    oidcClientSecret?: string;
}
export interface VerifierOptions {
    rekorBaseURL?: string;
}
export declare function getRekorBaseUrl(options?: SignOptions): string;
export declare function sign(payload: Buffer, options?: SignOptions): Promise<SigstoreBlobBundle>;
export declare function signAttestation(payload: Buffer, payloadType: string, options?: SignOptions): Promise<SigstoreDSSEBundle>;
export declare function verify(payload: Buffer, signature: string, certificate: KeyLike, options?: VerifierOptions): Promise<boolean>;
export declare function verifyDSSE(bundle: SigstoreDSSEBundle, options?: VerifierOptions): Promise<boolean>;
//# sourceMappingURL=sigstore.d.ts.map